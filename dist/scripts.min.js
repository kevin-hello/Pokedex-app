let pokemonRepository = (function () {
  document.querySelector(".container");
  let t = [],
    e = "https://pokeapi.co/api/v2/pokemon/?limit=150",
    n = document.querySelector("#search-bar");
  return (
    n.addEventListener("input", function () {
      let t = document.querySelectorAll(".group-list-item"),
        e = n.value.toUpperCase();
      t.forEach(function (t) {
        t.innerText.toUpperCase().indexOf(e) > -1
          ? (t.style.display = "")
          : (t.style.display = "none");
      });
    }),
    {
      getAll: function () {
        return t;
      },
      addListItem: function (t) {
        let e = document.querySelector(".pokemon-list"),
          n = document.createElement("li");
        n.classList.add(
          "group-list-item",
          "col-12",
          "col-lg-4",
          "col-md-6",
          "col-sm-12"
        );
        let i = document.createElement("button");
        (i.innerText = t.name),
          i.classList.add("button-class", "btn", "btn-primary"),
          i.setAttribute("data-target", "#pokemonModal"),
          i.setAttribute("data-toggle", "modal"),
          n.appendChild(i),
          e.appendChild(n),
          i.addEventListener("click", function () {
            !(function (t) {
              (function (t) {
                let e = t.detailsUrl;
                return fetch(e)
                  .then(function (t) {
                    return t.json();
                  })
                  .then(function (e) {
                    (t.imageUrlFront = e.sprites.front_default),
                      (t.imageUrlBack = e.sprites.back_default),
                      (t.height = e.height),
                      (t.types = []);
                    for (let n = 0; n < e.types.length; n++)
                      t.types.push(e.types[n].type.name);
                    (t.weight = e.weight), (t.abilities = []);
                    for (let n = 0; n < e.abilities.length; n++)
                      t.abilities.push(e.abilities[n].ability.name);
                  })
                  .catch(function (t) {
                    console.error(t);
                  });
              })(t).then(function () {
                !(function (t) {
                  let e = $(".modal-body"),
                    n = $(".modal-title");
                  $(".modal-header"), n.empty(), e.empty();
                  let i = $("<h1>" + t.name + "</h1>"),
                    o = $('<img class="modal-img" style="width:50%">');
                  o.attr("src", t.imageUrlFront);
                  let l = $('<img class="modal-img" style="width:50%">');
                  l.attr("src", t.imageUrlBack);
                  let a = $("<p>height: " + t.height + "</p>"),
                    r = $("<p>weight: " + t.weight + "</p>"),
                    s = $("<p>types: " + t.types.join(", ") + "</p>"),
                    c = $("<p>abilities: " + t.abilities.join(", ") + "</p>");
                  n.append(i),
                    e.append(o),
                    e.append(l),
                    e.append(a),
                    e.append(r),
                    e.append(s),
                    e.append(c);
                })(t);
              });
            })(t);
          });
      },
      loadList: function () {
        return fetch(e)
          .then(function (t) {
            return t.json();
          })
          .then(function (e) {
            e.results.forEach(function (e) {
              !(function (e) {
                "object" == typeof e && "name" in e
                  ? t.push(e)
                  : console.log("pokemon is not correct");
              })({ name: e.name, height: e.height, detailsUrl: e.url });
            });
          })
          .catch(function (t) {
            console.error(t);
          });
      },
    }
  );
})();
pokemonRepository.loadList().then(function () {
  pokemonRepository.getAll().forEach(function (t) {
    pokemonRepository.addListItem(t);
  });
});
